/*
 * YNAB API Endpoints
 * Our API uses a REST based design, leverages the JSON data format, and relies upon HTTPS for transport. We respond with meaningful HTTP response codes and if an error occurs, we include error details in the response body.  API Documentation is at https://api.youneedabudget.com
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ynab.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * CurrencyFormat
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-06-25T01:42:20.552-05:00")
public class CurrencyFormat {
  @SerializedName("iso_code")
  private String isoCode = null;

  @SerializedName("example_format")
  private String exampleFormat = null;

  @SerializedName("decimal_digits")
  private BigDecimal decimalDigits = null;

  @SerializedName("decimal_separator")
  private String decimalSeparator = null;

  @SerializedName("symbol_first")
  private Boolean symbolFirst = null;

  @SerializedName("group_separator")
  private String groupSeparator = null;

  @SerializedName("currency_symbol")
  private String currencySymbol = null;

  @SerializedName("display_symbol")
  private Boolean displaySymbol = null;

  public CurrencyFormat isoCode(String isoCode) {
    this.isoCode = isoCode;
    return this;
  }

   /**
   * Get isoCode
   * @return isoCode
  **/
  @ApiModelProperty(required = true, value = "")
  public String getIsoCode() {
    return isoCode;
  }

  public void setIsoCode(String isoCode) {
    this.isoCode = isoCode;
  }

  public CurrencyFormat exampleFormat(String exampleFormat) {
    this.exampleFormat = exampleFormat;
    return this;
  }

   /**
   * Get exampleFormat
   * @return exampleFormat
  **/
  @ApiModelProperty(required = true, value = "")
  public String getExampleFormat() {
    return exampleFormat;
  }

  public void setExampleFormat(String exampleFormat) {
    this.exampleFormat = exampleFormat;
  }

  public CurrencyFormat decimalDigits(BigDecimal decimalDigits) {
    this.decimalDigits = decimalDigits;
    return this;
  }

   /**
   * Get decimalDigits
   * @return decimalDigits
  **/
  @ApiModelProperty(required = true, value = "")
  public BigDecimal getDecimalDigits() {
    return decimalDigits;
  }

  public void setDecimalDigits(BigDecimal decimalDigits) {
    this.decimalDigits = decimalDigits;
  }

  public CurrencyFormat decimalSeparator(String decimalSeparator) {
    this.decimalSeparator = decimalSeparator;
    return this;
  }

   /**
   * Get decimalSeparator
   * @return decimalSeparator
  **/
  @ApiModelProperty(required = true, value = "")
  public String getDecimalSeparator() {
    return decimalSeparator;
  }

  public void setDecimalSeparator(String decimalSeparator) {
    this.decimalSeparator = decimalSeparator;
  }

  public CurrencyFormat symbolFirst(Boolean symbolFirst) {
    this.symbolFirst = symbolFirst;
    return this;
  }

   /**
   * Get symbolFirst
   * @return symbolFirst
  **/
  @ApiModelProperty(required = true, value = "")
  public Boolean isSymbolFirst() {
    return symbolFirst;
  }

  public void setSymbolFirst(Boolean symbolFirst) {
    this.symbolFirst = symbolFirst;
  }

  public CurrencyFormat groupSeparator(String groupSeparator) {
    this.groupSeparator = groupSeparator;
    return this;
  }

   /**
   * Get groupSeparator
   * @return groupSeparator
  **/
  @ApiModelProperty(required = true, value = "")
  public String getGroupSeparator() {
    return groupSeparator;
  }

  public void setGroupSeparator(String groupSeparator) {
    this.groupSeparator = groupSeparator;
  }

  public CurrencyFormat currencySymbol(String currencySymbol) {
    this.currencySymbol = currencySymbol;
    return this;
  }

   /**
   * Get currencySymbol
   * @return currencySymbol
  **/
  @ApiModelProperty(required = true, value = "")
  public String getCurrencySymbol() {
    return currencySymbol;
  }

  public void setCurrencySymbol(String currencySymbol) {
    this.currencySymbol = currencySymbol;
  }

  public CurrencyFormat displaySymbol(Boolean displaySymbol) {
    this.displaySymbol = displaySymbol;
    return this;
  }

   /**
   * Get displaySymbol
   * @return displaySymbol
  **/
  @ApiModelProperty(required = true, value = "")
  public Boolean isDisplaySymbol() {
    return displaySymbol;
  }

  public void setDisplaySymbol(Boolean displaySymbol) {
    this.displaySymbol = displaySymbol;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CurrencyFormat currencyFormat = (CurrencyFormat) o;
    return Objects.equals(this.isoCode, currencyFormat.isoCode) &&
        Objects.equals(this.exampleFormat, currencyFormat.exampleFormat) &&
        Objects.equals(this.decimalDigits, currencyFormat.decimalDigits) &&
        Objects.equals(this.decimalSeparator, currencyFormat.decimalSeparator) &&
        Objects.equals(this.symbolFirst, currencyFormat.symbolFirst) &&
        Objects.equals(this.groupSeparator, currencyFormat.groupSeparator) &&
        Objects.equals(this.currencySymbol, currencyFormat.currencySymbol) &&
        Objects.equals(this.displaySymbol, currencyFormat.displaySymbol);
  }

  @Override
  public int hashCode() {
    return Objects.hash(isoCode, exampleFormat, decimalDigits, decimalSeparator, symbolFirst, groupSeparator, currencySymbol, displaySymbol);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CurrencyFormat {\n");
    
    sb.append("    isoCode: ").append(toIndentedString(isoCode)).append("\n");
    sb.append("    exampleFormat: ").append(toIndentedString(exampleFormat)).append("\n");
    sb.append("    decimalDigits: ").append(toIndentedString(decimalDigits)).append("\n");
    sb.append("    decimalSeparator: ").append(toIndentedString(decimalSeparator)).append("\n");
    sb.append("    symbolFirst: ").append(toIndentedString(symbolFirst)).append("\n");
    sb.append("    groupSeparator: ").append(toIndentedString(groupSeparator)).append("\n");
    sb.append("    currencySymbol: ").append(toIndentedString(currencySymbol)).append("\n");
    sb.append("    displaySymbol: ").append(toIndentedString(displaySymbol)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

